name: Deploy to GCP

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GCP_PROJECT_ID: jrw-demo-project
  GCP_REGION: us-central1
  BACKEND_SERVICE_NAME: johnwebb-app-backend
  FRONTEND_BUCKET_NAME: johnwebb-app-frontend-dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          # Add your test command here when tests are available
          echo "Backend tests would run here"

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test:ci

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

  deploy-infrastructure:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Pulumi
        uses: pulumi/actions@v4
        with:
          command: install

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install Pulumi dependencies
        run: |
          cd infra
          pip install -r requirements.txt

      - name: Deploy infrastructure
        run: |
          cd infra
          pulumi stack select dev
          pulumi up --yes
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  build-and-deploy-backend:
    needs: [test, deploy-infrastructure]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Build and push backend image
        run: |
          cd backend
          docker build -t gcr.io/$GCP_PROJECT_ID/$BACKEND_SERVICE_NAME:$GITHUB_SHA .
          docker push gcr.io/$GCP_PROJECT_ID/$BACKEND_SERVICE_NAME:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $BACKEND_SERVICE_NAME \
            --image gcr.io/$GCP_PROJECT_ID/$BACKEND_SERVICE_NAME:$GITHUB_SHA \
            --region $GCP_REGION \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10

  build-and-deploy-frontend:
    needs: [test, deploy-infrastructure]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install Pulumi
        uses: pulumi/actions@v4
        with:
          command: install

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_BASE_URL: ${{ secrets.BACKEND_URL }}

      - name: Deploy to Cloud Storage
        run: |
          # Get the bucket name from Pulumi output
          BUCKET_NAME=$(pulumi stack output frontend_bucket_name --cwd infra)

          # Sync built files to bucket
          gsutil -m rsync -r -d frontend/dist/ gs://$BUCKET_NAME/

          # Make files publicly readable
          gsutil -m acl ch -r -u AllUsers:R gs://$BUCKET_NAME/

  notify:
    needs: [build-and-deploy-backend, build-and-deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.build-and-deploy-backend.result }}" == "success" ] && [ "${{ needs.build-and-deploy-frontend.result }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi
